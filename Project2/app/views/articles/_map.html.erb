<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Listing markers in view</title>
<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox.js/v2.1.8/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v2.1.8/mapbox.css' rel='stylesheet' />
<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100% }
  .box {
    position:relative;
    width:20%: 100px;
  }
</style>
</head>
<body>
<div class="box>"

  <div id='map'></div>


<script>
L.mapbox.accessToken = 'pk.eyJ1IjoibmJ1bWJhcmdlciIsImEiOiIwdlI1ZnlzIn0.XLgYFawoWHOeHLWnzuqQuw';
var map = L.mapbox.map('map', 'examples.map-20v6611k');
var myLayer = L.mapbox.featureLayer().addTo(map);
var features = [];

<% @articles.each do |article| %>
features.push({
  type: 'Feature',
  geometry: {
    type: 'Point',
    coordinates: [<%= article.ycoor %>,<%= article.xcoor %>]
    },
  properties: {
    title: '<%= article.title %>',
    description: '<%= article.description %>',
    'marker-color': '#000',
    'marker-symbol': 'star-stroked',
    }
});
<% end %>

myLayer.setGeoJSON({
    type: 'FeatureCollection',
    features: features
});

map.on('move', function() {
    // Construct an empty list to fill with onscreen markers.
    var inBounds = [],
    // Get the map bounds - the top-left and bottom-right locations.
        bounds = map.getBounds();

    // For each marker, consider whether it is currently visible by comparing
    // with the current map bounds.
    myLayer.eachLayer(function(marker) {
        if (bounds.contains(marker.getLatLng())) {
            inBounds.push(marker.options.title);
        }
    });
});

map.setView([37, -77], 5);
</script>


</div>

</body>
</html>
